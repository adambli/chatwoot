trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: self
  submodules: true

- script: |
    git clone https://github.com/chatwoot/chatwoot.git
    cd chatwoot
    make burn
  displayName: 'Install dependencies'

- script: |
    cp .env.example .env
    # Add commands to configure .env as required
  displayName: 'Setup Environment Variables'

- script: |
    docker-compose -f docker-compose.production.yaml up --build -d
  displayName: 'Build and start Chatwoot services'

- script: |
    docker-compose exec server bundle exec rails db:prepare
  displayName: 'Prepare database'

- script: |
    docker-compose down
  displayName: 'Stop services'

- script: |
    docker-compose build
  displayName: 'Build Docker images'

- script: |
    # Commands to push the Docker images to a registry
    # e.g., docker push <your-registry>/chatwoot:$(Build.BuildId)
  displayName: 'Push Docker images to registry'
